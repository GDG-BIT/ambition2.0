datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  email            String?   @unique
  emailVerified    Boolean?
  profileCompleted Boolean   @default(false)
  image            String?
  accounts         Account[]
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Profile {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  name         String
  photoURL     String?
  college      String
  collegeEmail String?
  paymentURL   String?
  paymentDone  Boolean  @default(false)
  createdAt    DateTime @default(now())

  // Each profile belongs to one team
  teamId String? @db.ObjectId
  team   Team?   @relation(fields: [teamId], references: [id])
}

model Team {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  teamCode Int    @unique

  // One team can have multiple members
  teamMembers Profile[]
}


